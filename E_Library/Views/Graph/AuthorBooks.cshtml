<html>
<head>
        
    @Html.Partial("../Shared/_Layout.cshtml")

</head>

<body class="text-center">
    <div class="background_image"></div>
    <div class="cover-container d-flex  p-0 pt-3  flex-column">

        @Html.Partial("../Shared/_Navigation.cshtml")

            
        <main role="main" class="mt-5 d-flex flex-column wrapper">

                
            <h2 class=" pl-5 pt-4 pb-4" style="" id="author_name_h2"></h2>

            <div class="d-block col-11 m-3 pr-5">
                <button class="btn btn-secondary float-right pl-3 pr-3 mr-4" id="add_book_button">Add Book</button>
            </div>

            <table class="table mt-5 pt-5 w-75 border m-auto" style="color:black" >
            <thead>
            <tr>
                <th scope="col" >#</th>
                <th scope="col" class="w-25">Title</th>
                <th scope="col" class="w-25">Author</th>
                <th scope="col" >Year</th>
                <th scope="col" style="max-width:250px!important">ISBN</th>
            </tr>
            </thead>
            <tbody id="books_table_body">
                   
            </tbody>
            </table>
        </main>

            

    </div>
</body>

<template id="books_row_template">

    <tr class="book_row" onclick='window.location.href = "/rest/book/${id}"'>
        <td >${i}</td>
        <td>${title}</td>
        <td>${name}</td>
        <td>${year}</td>
        <td style="max-width:250px!important">${isbn}</td>
    </tr>

</template>
 

<script>
    let books = {};

    books.bl = new function() {

        this.book_details = (id) => {

            window.location.href = "/graph/book/" + id;

        }

        this.load_books = async () => {


            var button = document. getElementById("add_book_button");
            button.onclick = () => {window.location.href ="/graph/AddBook/" + id;}

            let id = js.page.get_id();
            const query = `
                   query {
                      book (where: {author: {id: {eq: ${id}}}}, first: 100) {
                        nodes {
                          id,
                          title,
                          year,
                          isbn,
                          author {
                            id,
                            name
                          }
                        }
                      }
                    }
                `;

            let json = await js.api.graphql(query)

            console.log(json);

            let data = json["data"]["book"]["nodes"];
         
            console.log("D",data)

            author_name_h2.innerText = data[0]['author']['name']

            let html = books_table_body.innerHTML;

            html = '';

            
            let i = 0;
            for(d of data) {

                var t = books_row_template.innerHTML;
                i++;

                t = t.replace("${id}", d['id']);
                t = t.replace("${i}", i);
                t = t.replace("${title}", d['title']);
                t = t.replace("${name}", d['author']['name']);
                t = t.replace("${year}", d['year']);
                t = t.replace("${isbn}", d['isbn']);

                books_table_body.insertAdjacentHTML("beforeend", t);

            }


        }

    }

    document.onload(books.bl.load_books());

</script>

</html>
