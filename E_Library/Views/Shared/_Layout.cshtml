<meta charset="utf-8">
<link rel="icon" href="favicon.svg">
<title>eLibrary</title>        
<link rel="stylesheet" href="/css/default.css" type="text/css" />
    
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" />

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
<script>

    let js = {}

    js.api = new function(){

        this.get_json = async (url) => {

            let start = performance.now();
            
            let response = await fetch(url);

            let end = performance.now();
            let time = end - start;
            console.log("Execution time: " + time);

            let data = await response.json();
            return data;

        }

        this.get = async(url) => {

            let start = performance.now();

            let response = await fetch(url);

            let end = performance.now();
            let time = end - start;
            console.log("Execution time: " + time);

            return response;

        }

        this.post_json = async(url, body) => {

            let start = performance.now();

            const res = await fetch(url, {
                method: 'POST',
                headers: {
                  'Accept': 'application/json',
                  "Content-Type": "application/x-www-form-urlencoded"
                },
                body: JSON.stringify(body)
            });

            let end = performance.now();
            let time = end - start;
            console.log("Execution time: " + time);

            const data = await res.json();

            return data;

        }

        this.post = async(url, body) => {

             let start = performance.now();

            const res = await fetch(url, {
                method: 'POST',
                headers: {
                  'Accept': 'application/json',
                  "Content-Type": "application/x-www-form-urlencoded"
                },
                body: JSON.stringify(body)
            });

            let end = performance.now();
            let time = end - start;
            console.log("Execution time: " + time);

            return res; 

        }

        this.graphql = async (query) => {
            
            let start = performance.now();

            let res = await fetch("https://localhost:7088/graphql", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json",
                    "Authorization": "bearer " + sessionStorage.getItem("token")
                },
                body: JSON.stringify({
                    query
                })
            })

            let end = performance.now();
            let time = end - start;
            console.log("Execution time: " + time);

            let json = await res.json();

            return json;

        }

    }

    js.page = new function() {

        this.get_id = () => {

            let url = window.location.href;

            let arr = url.split("/");

            arr.reverse();

            return arr[0];

        }

    }

    

</script>